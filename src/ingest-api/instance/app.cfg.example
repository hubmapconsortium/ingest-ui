# Neo4j connection (default value used for docker dev environment)
# Point to remote neo4j for testing and production deployment
NEO4J_SERVER = 'bolt://hubmap-neo4j:7687'
NEO4J_USERNAME = 'neo4j'
NEO4J_PASSWORD = '123'

# Globus App ID and secret
APP_CLIENT_ID = ''
APP_CLIENT_SECRET = ''

# Globus Endpoint UUID
GLOBUS_ENDPOINT_UUID = ''

# File system settings
# No need to modify here if deployed with docker
# Just make sure the volume mounts in docker compose yaml mapped correctly
LOCAL_STORAGE_DIRECTORY = '/hubmap-tmp'
GLOBUS_ENDPOINT_FILEPATH = '/hubmap-data'
HUBMAP_WEBSERVICE_FILEPATH = '/usr/src/assets'

# URL for talking to UUID API (default value used for docker dev environment)
# Don't use localhost since uuid-api running on a different container
# Point to remote URL for testing and production deployment
UUID_WEBSERVICE_URL = 'http://hubmap-auth:9999/hmuuid'

# Must no trailing slash /
# Default works with only localhost deployment
SEARCH_WEBSERVICE_URL = 'http://hubmap-auth:6666'

# URL of UUID UI for Cross-Origin Resource Sharing (CORS)
# This has no effect with Gateway (enabled CORS in nginx conf)
# UUID_UI_URL = 'http://localhost:8585'

# For UI login/logout
# Flask app session key
SECRET_KEY = 'a%@3k9Hdlkfjakjajf99adsf909oel'

# Need the trailing slash /
FLASK_APP_BASE_URI = 'http://localhost:8484/'

# React app name and deployment URI (default value used for docker dev environment)
GLOBUS_CLIENT_APP_NAME = 'HuBMAP Data Ingest'
# Point to remote URL for testing and production deployment
GLOBUS_CLIENT_APP_URI = 'http://localhost:8585/'
